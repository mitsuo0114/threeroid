/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    kotlin("jvm") version "1.2.71"
}

repositories {
    jcenter()
}

dependencies {
    implementation(kotlin("stdlib", "1.2.71"))
    implementation(files("libs/android-28.jar"))

    testImplementation("io.mockk:mockk:+")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.3.1")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.3.1")
    testImplementation("org.junit.vintage:junit-vintage-engine:5.3.1")
    testImplementation("org.junit.platform:junit-platform-launcher:1.3.1")
}

tasks {
    "test"(Test::class) {
        val id_regex = Regex("android:id=\"@\\+id/(?<id>[a-z_]+)\"")
        val r_map = mutableMapOf<String, MutableList<String>>()
        r_map["layout"] = mutableListOf()
        r_map["id"] = mutableListOf()
        var base_path = "app/src/"
        if (!File(base_path).exists()) {
            base_path = "src/"
        }
        File("${base_path}main/res/layout").walkTopDown().forEach {
            if (it.name.endsWith(".xml")) {
                r_map["layout"]?.add(it.name.replace(".xml", ""))
                File("${base_path}main/res/layout/" + it.name).forEachLine {
                    val t = it.split(" ")
                    t.forEach {
                        val result = id_regex.matchEntire(it)
                        if (result != null) {
                            r_map["id"]?.add(result.groups["id"]!!.value)
                        }
                    }
                }
            }
        }
        var index = 0x01
        val string = buildString {
            append("package com.threeroid.threeroid\n")
            append("class R {\n")
            r_map.forEach { k, l ->
                append("object ${k} {\n")
                l.forEach {
                    append("val ${it} = ${index}\n")
                    index += 1
                }
                append("}\n")
            }
            append("}\n")
        }
        File("${base_path}main/kotlin/com/threeroid/threeroid/R.kt").writeText(string)


        useJUnitPlatform {
            includeEngines("junit-jupiter")
        }
        testLogging.events = setOf(TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.FAILED)

        doLast {
            println("Deleting ${base_path}main/kotlin/com/threeroid/threeroid/R.kt")
            File("${base_path}main/kotlin/com/threeroid/threeroid/R.kt").deleteRecursively()
        }
    }
}

